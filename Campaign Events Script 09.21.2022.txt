import boto3
import json
import pandas as pd
import time
import datetime
from pathlib import Path
from datetime import datetime, timedelta

#bucket and file path

bucket_name = 'mp-forwarding-us-east-prod-corp-gdap'
s3 = boto3.resource('s3')
bucket = s3.Bucket(bucket_name)
yesterday = datetime.now() - timedelta(1)
current_date = yesterday.strftime('%Y-%m-%d')
key_part_1 = 'US/Campaign_Events/'
key_part_2 = current_date + '/'
key = key_part_1 + key_part_2
dfs = pd.DataFrame()

for obj in bucket.objects.filter(Prefix=key):
   print("Processing " + obj.key + '...')
   lines = obj.get()['Body'].read().decode('utf-8').splitlines()
   i = 0
   for line in lines:
      event = json.loads(line)
      events = event['events']
      data = event['events'][0]['data']
      attr = data['custom_attributes']
      source_info = event['source_info']
      device_info = event['device_info']
      app_info = event['application_info']
      custom_flags = data['custom_flags']
      ts = int(data['timestamp_unixtime_ms'])
      evt = {
        "custom_event_type": data['custom_event_type'] if 'custom_event_type' in data else None,
        "event_name": data['event_name'] if 'event_name' in data else None,
        "custom_flags": data['custom_flags'] if 'custom_flags' in data else None,
        "events_0_data_timestamp_unixtime_ms": time.strftime('%Y-%m-%d %H:%M:%S', time.gmtime(ts/1000.0)),
        "event_id": data['event_id'] if 'event_id' in data else None,
        "source_message_id": data['source_message_id'] if 'source_message_id' in data else None,
        "canvas_id": attr['canvas_id'] if 'canvas_id' in attr else None,
        "canvas_step_id": attr['canvas_step_id'] if 'canvas_step_id' in attr else None,
        "canvas_step_name": attr['canvas_step_name'] if 'canvas_step_name' in attr else None,
        "canvas_variation_id": attr['canvas_variation_id'] if 'canvas_variation_id' in attr else None,
        "canvas_variation_name": attr['canvas_variation_name'] if 'canvas_variation_name' in attr else None,
        "canvas_name": attr['canvas_name'] if 'canvas_name' in attr else None,
        "dispatch_id": attr['dispatch_id'] if 'dispatch_id' in attr else None,
        "ip_pool": attr['ip_pool'] if 'ip_pool' in attr else None,
        "esp": attr['esp'] if 'esp' in attr else None,
        "from_domain": attr['from_domain'] if 'from_domain' in attr else None,
        "machine_open": attr['machine_open'] if 'machine_open' in attr else None,
        "user_agent": attr['user_agent'] if 'user_agent' in attr else None,
        "mParticle Source Feed": attr['mParticle Source Feed'] if 'mParticle Source Feed' in attr else None,
        "event_type": events['event_type'] if 'event_type' in events else None,
        "mpid": event['mpid'] if 'mpid' in event else None,
        "timestamp_unixtime_ms": event['timestamp_unixtime_ms'] if 'timestamp_unixtime_ms' in event else None,
        "batch_id": event['batch_id'] if 'batch_id' in event else None,
        "message_id": event['message_id'] if 'message_id' in event else None,
        "schema_version": event['schema_version'] if 'schema_version' in event else None,
        "timezone_offset": device_info['timezone_offset'] if 'timezone_offset' in device_info else None,
        "is_dst": device_info['is_dst'] if 'is_dst' in device_info else None,
        "os": app_info['os'] if 'os' in app_info else None,
        "channel": source_info['channel'] if 'channel' in source_info else None,
        "partner": source_info['partner'] if 'partner' in source_info else None,
        "mp_deviceid": event['mp_deviceid'] if 'mp_deviceid' in event else None,
        "ip": event['ip'] if 'ip' in event else None,
        "environment": event['environment'] if 'environment' in event else None,
        "message_type": event['message_type'] if 'message_type' in event else None
      }
      for identity in event['user_identities']:
            if identity['identity_type'] == 'customer_id':
                evt['ccp_id'] = identity['identity']
            elif identity['identity_type'] == 'other':
                evt['hashed_dcs_id'] = identity['identity']
            elif identity['identity_type'] == 'other3':
                evt['dcs_id'] = identity['identity']
            elif identity['identity_type'] == 'email':
                evt['email'] = identity['identity']
            elif identity['identity_type'] == 'other4':
                evt['dcs_id'] = identity['identity']
            
      dfs = dfs.append(pd.DataFrame([evt]))